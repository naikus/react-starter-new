@import "@less/vars.less";

@field-container-padding: @padding-default*1.5;
@radio-indictor-size: 20px;

.checkbox-container, .radio-container {
    position: relative;
    display: inline-block;
    input {
      width: @radio-indictor-size;
      height: @radio-indictor-size;
      margin: 0;
      opacity: 0;
      position: absolute;
      cursor: pointer;
    }
    .indicator {
      cursor: pointer;
      border-radius: @input-border-radius;
      width: @radio-indictor-size;
      height: @radio-indictor-size;
      background-color: var(--input-bg-color);
      border: 1px solid rgba(0,0,0,0.07);

      &::after {
        content: "";
        position: absolute;        
        display: none;
      }
    }

    input:focus ~ .indicator {
      box-shadow: 0 0 0px 3px var(--input-focus-ring-color);
    }

    input:checked ~ .indicator {
      background-color: var(--accent-color);
      &::after {
        display: block;
      }
    }
    input:disabled ~ .indicator {
      pointer-events: none;
      background-color: var(--input-disabled-bg-color);
      cursor: not-allowed;
    }
}

.checkbox-container {
  .indicator {
    &::after {
      width: 4px;
      height: 9px;
      border: solid var(--accent-text-color);
      border-width: 0 2px 2px 0;
      transform: rotate(45deg);
      top: 4px;
      left: 8px;
    }
  }
  input:disabled ~ .indicator {
    &::after {
      // border-color: darken(@input-disabled-color, 5%);
    }
  }
}

.radio-container {
  .indicator {
    border-radius: 50%;
    &::after {
      width: 12px;
      height: 12px;
      border-radius: 50%;
      background-color: var(--accent-text-color);
      border-width: 0;
      top: 5px;
      left: 5px;
    }
  }
  input:disabled ~ .indicator {
    &::after {
      // background-color: darken(@input-disabled-color, 7%);
    }
  }
}


// Form built-in field renderer styles
.field-container {
  padding: @field-container-padding;
  background-color: var(--base-color);
  margin-bottom: @base-unit + 4px;
  overflow: auto;
  
  .hint, .value {
    font-size: 0.85em;
    // ont-weight: 100;
    color: var(--input-hint-color);
    margin: 4px 4px 4px 0;
    float: left;
  }
  .value {
    float: right;
    color: var(--text-color);
  }
  .label {
    color: var(--text-color);
    span {
      display: block;
    }
  }
  input, textarea, select, button {
    margin-bottom: 5px;
  }


  &.checkbox, &.radio {
    position: relative;
    > .label {
      margin-left: @field-container-padding + @padding-default;
    }
  }
  .checkbox-container, .radio-container {
    position: absolute;
    top: @field-container-padding;
    left: @field-container-padding;
    margin-bottom: @field-container-padding;
  }

  .v-msg {
    margin-bottom: 5px;
    font-weight: 400;
    clear: both;
  }

  &.valid-false {
    input, textarea, select {
      // border-bottom-color: var(--error-color);
    }
    .v-msg {
      color: var(--error-color);
    }
  }
  
}


.multi-val-input {
  .values {
    display: flex;
    flex-wrap: wrap;
    .value-item {
      display: flex;
      float: left;
      align-items: center;
      margin-right: @base-unit - 2;
      margin-bottom: @base-unit - 2;
      padding: 5px 6px 3px;
      min-width: 30px;
      background-color: var(--accent-color);
      border-radius: @base-border-radius - 4;
      color: var(--accent-text-color);
      opacity: 0.8;

      .icon {
        padding-left: @base-unit + 4px;
        cursor: pointer;
      }

      &:hover {
        opacity: 1;
      }

      &.disabled {
        opacity: 0.5;
        cursor: not-allowed;
        &:hover {
          opacity: 0.5;
        }
      }
    }
  }
  .value-input {
    margin-top: @base-unit - 4;
  }
}


.file-upload-input {
  position: relative;

  > .content {
    background-color: var(--bg-color);
    border-radius: @input-border-radius;
    > .actions {
      padding: @padding-smaller;
      display: flex;
      flex-direction: row-reverse;
      border-bottom: 1px solid rgba(0,0,0,0.04);
      > .action {
        padding: @padding-smaller;
        margin: 0 2px;
        cursor: pointer;
        border-radius: @input-border-radius;
        font-size: 1.1rem;
        &:hover {
          color: var(--accent-color);
          background-color: rgba(0,0,0,0.04);
        }

        &[disabled] {
          opacity: 0.4;
          cursor: not-allowed;
          &:hover {
            color: inherit;
            background-color: inherit;
          }
        }
      }
    }
    > .files {
      padding: 0;
      margin: 0 0 @base-unit * 2 0;
      color: var(--text-color);
      max-height: 225px;
      overflow-y: auto;
  
      > .file-item {
        display: flex;
        // justify-content: space-between;
        margin: 0;
        padding: @base-unit @base-unit + 4;
        font-size: 0.9rem;
        border-bottom: 1px solid rgba(0,0,0,0.1);

        &:hover {
          background-color: rgba(0,0,0,0.04);
        }
  
        > .icon-file {
          font-size: 1.1rem;
          margin: auto 1px;
          padding: @base-unit;
          background-color: rgba(0,0,0,0.04);
          border-radius: @input-border-radius;
        }
  
        > .file-details {
          flex: 1;
          padding: @padding-smaller;
          text-overflow: hidden;
          .file-name {
          }
          .file-meta {
            .pill {
              padding: 3px @padding-smaller;
              background-color: var(--base-color);
              border-radius: @base-border-radius - 2;
              margin-right: 2px;
            }
          }
        }
  
        > .icon {
          margin: auto 1px;
          cursor: pointer;
          padding: @base-unit;
          &:hover {
            color: var(--warn-color);
          }
        }
      }
    }
  }
  

  input[type="file"] {
    display: none;
  }

  .file-upload-actions {
    text-align: right;
  }

  button {
    display: inline;
    width: auto;
    margin: 0;
  }
}


.multi-select {
  min-height: 100px;
  overflow: auto;
  padding: @padding-smaller !important;

  > .multi-select-item {
    padding: @padding-smaller - 2;
    cursor: pointer;
    border-radius: @input-border-radius;
    margin-bottom: @size_tiny + 0px;

    &:hover {
      background-color: rgba(0,0,0,0.04);
    }
    &.selected {
      background-color: var(--accent-color);
      color: var(--selection-text-color);
    }
  }

  &.disabled, [disabled] {
    cursor: not-allowed;
    opacity: 0.8;

    > .multi-select-item {
      cursor: not-allowed;
      &:hover {
        background-color: inherit;
        color: inherit;
      }
    }
  }
}
